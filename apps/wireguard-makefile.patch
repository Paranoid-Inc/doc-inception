From 244519094b6961bd050479f3b4bcf755286c05bd Mon Sep 17 00:00:00 2001
From: neuroretransmit <neuroretransmit@proton.me>
Date: Sun, 29 Dec 2024 03:07:05 -0800
Subject: [PATCH] Use system golang/disable other architectures

* Uses system golang instead of downloading package
* Removes -buildinfo/-buildvcs flags that are provided in 1.18 of golang
* Remove unused architectures from Makefile
---
 Makefile | 30 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

diff --git a/Makefile b/Makefile
index 2724e319..71ba8bf7 100644
--- a/Makefile
+++ b/Makefile
@@ -1,4 +1,4 @@
-GOFLAGS := -tags load_wgnt_from_rsrc -ldflags="-H windowsgui -s -w" -trimpath -buildinfo=false -buildvcs=false -v
+GOFLAGS := -tags load_wgnt_from_rsrc -ldflags="-H windowsgui -s -w" -trimpath -v
 export GOOS := windows
 export PATH := $(CURDIR)/.deps/go/bin:$(PATH)
 
@@ -9,13 +9,13 @@ comma := ,
 RCFLAGS := -DWIREGUARD_VERSION_ARRAY=$(subst $(space),$(comma),$(wordlist 1,4,$(subst .,$(space),$(VERSION)) 0 0 0 0)) -DWIREGUARD_VERSION_STR=$(VERSION) -O coff -c 65001
 
 rwildcard=$(foreach d,$(filter-out .deps,$(wildcard $1*)),$(call rwildcard,$d/,$2) $(filter $(subst *,%,$2),$d))
-SOURCE_FILES := $(call rwildcard,,*.go) .deps/go/prepared go.mod go.sum
+SOURCE_FILES := $(call rwildcard,,*.go) go.mod go.sum
 RESOURCE_FILES := resources.rc version/version.go manifest.xml $(patsubst %.svg,%.ico,$(wildcard ui/icon/*.svg)) .deps/wireguard-nt/prepared
 
 DEPLOYMENT_HOST ?= winvm
 DEPLOYMENT_PATH ?= Desktop
 
-all: amd64/wireguard.exe x86/wireguard.exe arm64/wireguard.exe
+all: amd64/wireguard.exe #x86/wireguard.exe arm64/wireguard.exe
 
 define download =
 .distfiles/$(1):
@@ -25,16 +25,16 @@ define download =
 	if ! mv $$@.unverified $$@; then rm -f $$@.unverified; exit 1; fi
 endef
 
-$(eval $(call download,go.tar.gz,https://go.dev/dl/go1.18beta1.linux-amd64.tar.gz,128f72c5c22640085e4187cd1b540c587cf8fb280f941519bd2d1ae9fdab4f37))
+#$(eval $(call download,go.tar.gz,https://go.dev/dl/go1.18beta1.linux-amd64.tar.gz,128f72c5c22640085e4187cd1b540c587cf8fb280f941519bd2d1ae9fdab4f37))
 $(eval $(call download,wireguard-nt.zip,https://download.wireguard.com/wireguard-nt/wireguard-nt-0.10.1.zip,772c0b1463d8d2212716f43f06f4594d880dea4f735165bd68e388fc41b81605))
 
-.deps/go/prepared: .distfiles/go.tar.gz
-	mkdir -p .deps
-	rm -rf .deps/go
-	bsdtar -C .deps -xf .distfiles/go.tar.gz
-	chmod -R +w .deps/go
-	touch $@
-
+#.deps/go/prepared: .distfiles/go.tar.gz
+#	mkdir -p .deps
+#	rm -rf .deps/go
+#	bsdtar -C .deps -xf .distfiles/go.tar.gz
+#	chmod -R +w .deps/go
+#	touch $@
+#
 .deps/wireguard-nt/prepared: .distfiles/wireguard-nt.zip
 	mkdir -p .deps
 	rm -rf .deps/wireguard-nt
@@ -45,7 +45,7 @@ $(eval $(call download,wireguard-nt.zip,https://download.wireguard.com/wireguard
 	convert -background none $< -define icon:auto-resize="256,192,128,96,64,48,40,32,24,20,16" -compress zip $@
 
 resources_amd64.syso: $(RESOURCE_FILES)
-	x86_64-w64-mingw32-windres $(RCFLAGS) -I .deps/wireguard-nt/bin/amd64 -i $< -o $@
+	windres $(RCFLAGS) -I .deps/wireguard-nt/bin/amd64 -i $< -o $@
 
 resources_386.syso: $(RESOURCE_FILES)
 	i686-w64-mingw32-windres $(RCFLAGS) -I .deps/wireguard-nt/bin/x86 -i $< -o $@
@@ -67,18 +67,18 @@ arm64/wireguard.exe: resources_arm64.syso $(SOURCE_FILES)
 
 remaster: export GOARCH := amd64
 remaster: export GOPROXY := direct
-remaster: .deps/go/prepared
+remaster: #.deps/go/prepared
 	rm -f go.sum go.mod
 	cp go.mod.master go.mod
 	go get -d
 	sed -i $(shell curl -L 'https://go.dev/dl/?mode=json&include=all' | jq -r '(".windows-amd64.zip",".linux-amd64.tar.gz") as $$suffix | .[-1].files[] | select(.filename|endswith($$suffix)) | ("-e", "s/go[0-9][^ ]*\\\($$suffix)\\([ ,]\\)[a-f0-9]\\+/\(.filename)\\1\(.sha256)/") | @sh') Makefile build.bat
 
 fmt: export GOARCH := amd64
-fmt: .deps/go/prepared
+fmt: #.deps/go/prepared
 	go fmt ./...
 
 generate: export GOOS :=
-generate: .deps/go/prepared
+generate: #.deps/go/prepared
 	go generate -mod=mod ./...
 
 crowdin:
-- 
2.47.1

